{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { UploadFilled } from '@element-plus/icons-vue';\nimport { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  name: 'VideoUpload',\n  components: {\n    UploadFilled: UploadFilled\n  },\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var uploadProgress = ref(0);\n    var uploadStatus = ref('');\n    var analyzing = ref(false);\n    var analysisProgress = ref(0);\n    var analysisStatus = ref('');\n    var pollInterval = ref(null);\n    var isAuthenticated = computed(function () {\n      return store.state.auth.isAuthenticated;\n    });\n    var uploadUrl = computed(function () {\n      var baseUrl = process.env.VUE_APP_API_URL || 'https://auth-api-nvdempim.fly.dev';\n      return \"\".concat(baseUrl, \"/api/videos/upload\");\n    });\n    var uploadHeaders = computed(function () {\n      return {\n        Authorization: \"Bearer \".concat(store.state.auth.token)\n      };\n    });\n    var beforeUpload = function beforeUpload(file) {\n      var isVideo = file.type.startsWith('video/');\n      var isLt500M = file.size / 1024 / 1024 < 500;\n      if (!isVideo) {\n        ElMessage.error('只能上传视频文件!');\n        return false;\n      }\n      if (!isLt500M) {\n        ElMessage.error('视频大小不能超过 500MB!');\n        return false;\n      }\n      return true;\n    };\n    var checkAnalysisStatus = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(videoId) {\n        var baseUrl, response, _response$data, status, progress, prd, business_plan;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              baseUrl = process.env.VUE_APP_API_URL || 'https://auth-api-nvdempim.fly.dev';\n              _context.next = 4;\n              return axios.get(\"\".concat(baseUrl, \"/api/videos/\").concat(videoId, \"/status\"), {\n                headers: uploadHeaders.value\n              });\n            case 4:\n              response = _context.sent;\n              _response$data = response.data, status = _response$data.status, progress = _response$data.progress, prd = _response$data.prd, business_plan = _response$data.business_plan;\n              analysisStatus.value = status;\n              analysisProgress.value = progress;\n              if (status === 'completed') {\n                clearInterval(pollInterval.value);\n                analyzing.value = false;\n                router.push({\n                  path: \"/products/\".concat(videoId),\n                  query: _objectSpread(_objectSpread({}, router.currentRoute.value.query), {}, {\n                    prd: encodeURIComponent(prd),\n                    business_plan: encodeURIComponent(business_plan)\n                  })\n                });\n              } else if (status === 'failed') {\n                clearInterval(pollInterval.value);\n                analyzing.value = false;\n                ElMessage.error('视频分析失败，请重试');\n              }\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Analysis status check failed:', _context.t0);\n              ElMessage.error('检查分析状态失败');\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      return function checkAnalysisStatus(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var handleSuccess = function handleSuccess(response) {\n      uploadProgress.value = 100;\n      uploadStatus.value = 'success';\n      analyzing.value = true;\n      analysisStatus.value = '正在分析视频...';\n      analysisProgress.value = 0;\n      var videoId = response.videoId;\n      pollInterval.value = setInterval(function () {\n        checkAnalysisStatus(videoId);\n      }, 3000);\n      setTimeout(function () {\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value);\n          analyzing.value = false;\n          ElMessage.warning('分析时间过长，请稍后在产品列表中查看结果');\n          router.push('/');\n        }\n      }, 600000);\n    };\n    var handleError = function handleError(error) {\n      var _error$response;\n      uploadStatus.value = 'exception';\n      var errorMessage = ((_error$response = error.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.detail) || '上传失败，请重试';\n      ElMessage.error(errorMessage);\n    };\n    var handleProgress = function handleProgress(event) {\n      uploadProgress.value = Math.round(event.percent);\n    };\n    var handleLogin = function handleLogin() {\n      router.push({\n        path: '/login',\n        query: _objectSpread(_objectSpread({}, router.currentRoute.value.query), {}, {\n          redirect: router.currentRoute.value.fullPath\n        })\n      });\n    };\n    return {\n      isAuthenticated: isAuthenticated,\n      uploadUrl: uploadUrl,\n      uploadHeaders: uploadHeaders,\n      uploadProgress: uploadProgress,\n      uploadStatus: uploadStatus,\n      analyzing: analyzing,\n      analysisProgress: analysisProgress,\n      analysisStatus: analysisStatus,\n      beforeUpload: beforeUpload,\n      handleSuccess: handleSuccess,\n      handleError: handleError,\n      handleProgress: handleProgress,\n      handleLogin: handleLogin\n    };\n  }\n};","map":{"version":3,"names":["UploadFilled","ref","computed","useRouter","useStore","ElMessage","axios","name","components","setup","store","router","uploadProgress","uploadStatus","analyzing","analysisProgress","analysisStatus","pollInterval","isAuthenticated","state","auth","uploadUrl","baseUrl","process","env","VUE_APP_API_URL","concat","uploadHeaders","Authorization","token","beforeUpload","file","isVideo","type","startsWith","isLt500M","size","error","checkAnalysisStatus","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","videoId","response","_response$data","status","progress","prd","business_plan","wrap","_callee$","_context","prev","next","get","headers","value","sent","data","clearInterval","push","path","query","_objectSpread","currentRoute","encodeURIComponent","t0","console","stop","_x","apply","arguments","handleSuccess","setInterval","setTimeout","warning","handleError","_error$response","errorMessage","detail","handleProgress","event","Math","round","percent","handleLogin","redirect","fullPath"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/VideoUpload.vue"],"sourcesContent":["<template>\n  <div class=\"video-upload\">\n    <el-card class=\"upload-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>上传视频分析</h2>\n          <p>上传APP操作录屏，自动生成PRD和商业计划书</p>\n        </div>\n      </template>\n\n      <div v-if=\"!isAuthenticated\" class=\"auth-required\">\n        <el-alert\n          title=\"请先登录\"\n          type=\"warning\"\n          description=\"您需要登录后才能上传视频\"\n          show-icon\n        />\n        <el-button type=\"primary\" @click=\"handleLogin\" class=\"login-button\">\n          去登录\n        </el-button>\n      </div>\n\n      <div v-else>\n        <el-upload\n          class=\"upload-container\"\n          drag\n          :action=\"uploadUrl\"\n          :before-upload=\"beforeUpload\"\n          :on-success=\"handleSuccess\"\n          :on-error=\"handleError\"\n          :on-progress=\"handleProgress\"\n          :headers=\"uploadHeaders\"\n          accept=\"video/*\"\n        >\n          <el-icon class=\"el-icon-upload\"><upload-filled /></el-icon>\n          <div class=\"el-upload__text\">\n            拖拽视频文件到此处或 <em>点击上传</em>\n          </div>\n          <template #tip>\n            <div class=\"el-upload__tip\">\n              支持上传MP4格式视频文件，文件大小不超过500MB\n            </div>\n          </template>\n        </el-upload>\n\n        <el-progress\n          v-if=\"uploadProgress > 0 && uploadProgress < 100\"\n          :percentage=\"uploadProgress\"\n          :status=\"uploadStatus\"\n        />\n\n        <div v-if=\"analyzing\" class=\"analysis-status\">\n          <el-alert\n            title=\"正在分析视频\"\n            type=\"info\"\n            :description=\"analysisStatus\"\n            show-icon\n          />\n          <el-progress\n            :percentage=\"analysisProgress\"\n            :status=\"analysisProgress === 100 ? 'success' : ''\"\n          />\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { UploadFilled } from '@element-plus/icons-vue'\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport axios from 'axios'\n\nexport default {\n  name: 'VideoUpload',\n  components: {\n    UploadFilled\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const uploadProgress = ref(0)\n    const uploadStatus = ref('')\n    const analyzing = ref(false)\n    const analysisProgress = ref(0)\n    const analysisStatus = ref('')\n    const pollInterval = ref(null)\n\n    const isAuthenticated = computed(() => store.state.auth.isAuthenticated)\n    const uploadUrl = computed(() => {\n      const baseUrl = process.env.VUE_APP_API_URL || 'https://auth-api-nvdempim.fly.dev'\n      return `${baseUrl}/api/videos/upload`\n    })\n    const uploadHeaders = computed(() => ({\n      Authorization: `Bearer ${store.state.auth.token}`\n    }))\n\n    const beforeUpload = (file) => {\n      const isVideo = file.type.startsWith('video/')\n      const isLt500M = file.size / 1024 / 1024 < 500\n\n      if (!isVideo) {\n        ElMessage.error('只能上传视频文件!')\n        return false\n      }\n      if (!isLt500M) {\n        ElMessage.error('视频大小不能超过 500MB!')\n        return false\n      }\n      return true\n    }\n\n    const checkAnalysisStatus = async (videoId) => {\n      try {\n        const baseUrl = process.env.VUE_APP_API_URL || 'https://auth-api-nvdempim.fly.dev'\n        const response = await axios.get(`${baseUrl}/api/videos/${videoId}/status`, {\n          headers: uploadHeaders.value\n        })\n\n        const { status, progress, prd, business_plan } = response.data\n\n        analysisStatus.value = status\n        analysisProgress.value = progress\n\n        if (status === 'completed') {\n          clearInterval(pollInterval.value)\n          analyzing.value = false\n          router.push({\n            path: `/products/${videoId}`,\n            query: {\n              ...router.currentRoute.value.query,\n              prd: encodeURIComponent(prd),\n              business_plan: encodeURIComponent(business_plan)\n            }\n          })\n        } else if (status === 'failed') {\n          clearInterval(pollInterval.value)\n          analyzing.value = false\n          ElMessage.error('视频分析失败，请重试')\n        }\n      } catch (error) {\n        console.error('Analysis status check failed:', error)\n        ElMessage.error('检查分析状态失败')\n      }\n    }\n\n    const handleSuccess = (response) => {\n      uploadProgress.value = 100\n      uploadStatus.value = 'success'\n      analyzing.value = true\n      analysisStatus.value = '正在分析视频...'\n      analysisProgress.value = 0\n\n      const videoId = response.videoId\n      pollInterval.value = setInterval(() => {\n        checkAnalysisStatus(videoId)\n      }, 3000)\n\n      setTimeout(() => {\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value)\n          analyzing.value = false\n          ElMessage.warning('分析时间过长，请稍后在产品列表中查看结果')\n          router.push('/')\n        }\n      }, 600000)\n    }\n\n    const handleError = (error) => {\n      uploadStatus.value = 'exception'\n      const errorMessage = error.response?.data?.detail || '上传失败，请重试'\n      ElMessage.error(errorMessage)\n    }\n\n    const handleProgress = (event) => {\n      uploadProgress.value = Math.round(event.percent)\n    }\n\n    const handleLogin = () => {\n      router.push({\n        path: '/login',\n        query: {\n          ...router.currentRoute.value.query,\n          redirect: router.currentRoute.value.fullPath\n        }\n      })\n    }\n\n    return {\n      isAuthenticated,\n      uploadUrl,\n      uploadHeaders,\n      uploadProgress,\n      uploadStatus,\n      analyzing,\n      analysisProgress,\n      analysisStatus,\n      beforeUpload,\n      handleSuccess,\n      handleError,\n      handleProgress,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.video-upload {\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 0 1rem;\n}\n\n.upload-card {\n  border-radius: 8px;\n}\n\n.card-header {\n  text-align: center;\n}\n\n.card-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  color: #303133;\n}\n\n.card-header p {\n  margin: 0.5rem 0 0;\n  color: #909399;\n}\n\n.auth-required {\n  text-align: center;\n  padding: 2rem;\n}\n\n.login-button {\n  margin-top: 1rem;\n}\n\n.upload-container {\n  width: 100%;\n}\n\n.el-upload__tip {\n  color: #909399;\n}\n\n.analysis-status {\n  margin-top: 1rem;\n}\n\n:deep(.el-upload-dragger) {\n  width: 100%;\n  height: 200px;\n}\n\n:deep(.el-icon-upload) {\n  font-size: 48px;\n  margin-bottom: 1rem;\n  color: #409EFF;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}