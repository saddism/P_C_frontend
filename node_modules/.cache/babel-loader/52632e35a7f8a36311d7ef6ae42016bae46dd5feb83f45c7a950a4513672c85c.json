{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport Register from \"../views/Register.vue\";\nimport Login from \"../views/Login.vue\";\nimport RegisterSuccess from \"../views/RegisterSuccess.vue\";\nimport VerifyEmail from \"../views/VerifyEmail.vue\";\nconst routes = [{\n  path: \"/\",\n  redirect: \"/login\"\n}, {\n  path: \"/register\",\n  name: \"Register\",\n  component: Register\n}, {\n  path: \"/login\",\n  name: \"Login\",\n  component: Login\n}, {\n  path: \"/register-success\",\n  name: \"RegisterSuccess\",\n  component: RegisterSuccess\n}, {\n  path: \"/verify-email\",\n  name: \"VerifyEmail\",\n  component: VerifyEmail\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from) => {\n  if (from.query.mock && !to.query.mock) {\n    return {\n      path: to.path,\n      query: {\n        ...to.query,\n        mock: '1'\n      }\n    };\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Register","Login","RegisterSuccess","VerifyEmail","routes","path","redirect","name","component","router","history","beforeEach","to","from","query","mock"],"sources":["/home/ubuntu/repos/P_C_frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\nimport Register from \"../views/Register.vue\";\nimport Login from \"../views/Login.vue\";\nimport RegisterSuccess from \"../views/RegisterSuccess.vue\";\nimport VerifyEmail from \"../views/VerifyEmail.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    redirect: \"/login\",\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    component: Register,\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    component: Login,\n  },\n  {\n    path: \"/register-success\",\n    name: \"RegisterSuccess\",\n    component: RegisterSuccess,\n  },\n  {\n    path: \"/verify-email\",\n    name: \"VerifyEmail\",\n    component: VerifyEmail,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach((to, from) => {\n  if (from.query.mock && !to.query.mock) {\n    return { path: to.path, query: { ...to.query, mock: '1' } };\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,WAAW,MAAM,0BAA0B;AAElD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,WAAW;EACjBE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAER;AACb,CAAC,EACD;EACEK,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEI,IAAI,EAAE,mBAAmB;EACzBE,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEG,IAAI,EAAE,eAAe;EACrBE,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEL;AACb,CAAC,CACF;AAED,MAAMM,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAC3BK;AACF,CAAC,CAAC;AAEFK,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,KAAK;EAC9B,IAAIA,IAAI,CAACC,KAAK,CAACC,IAAI,IAAI,CAACH,EAAE,CAACE,KAAK,CAACC,IAAI,EAAE;IACrC,OAAO;MAAEV,IAAI,EAAEO,EAAE,CAACP,IAAI;MAAES,KAAK,EAAE;QAAE,GAAGF,EAAE,CAACE,KAAK;QAAEC,IAAI,EAAE;MAAI;IAAE,CAAC;EAC7D;AACF,CAAC,CAAC;AAEF,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}