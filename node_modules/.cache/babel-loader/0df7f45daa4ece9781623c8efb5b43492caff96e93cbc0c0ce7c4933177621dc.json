{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"video-upload\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"auth-required\"\n};\nvar _hoisted_3 = {\n  key: 1\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"analysis-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_alert = _resolveComponent(\"el-alert\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_upload_filled = _resolveComponent(\"upload-filled\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_upload = _resolveComponent(\"el-upload\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"upload-card\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"h2\", null, \"上传视频分析\"), _createElementVNode(\"p\", null, \"上传APP操作录屏，自动生成PRD和商业计划书\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [!$setup.isAuthenticated ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_alert, {\n        title: \"请先登录\",\n        type: \"warning\",\n        description: \"您需要登录后才能上传视频\",\n        \"show-icon\": \"\"\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleLogin,\n        \"class\": \"login-button\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[1] || (_cache[1] = [_createTextVNode(\" 去登录 \")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_upload, {\n        \"class\": \"upload-container\",\n        drag: \"\",\n        action: $setup.uploadUrl,\n        \"before-upload\": $setup.beforeUpload,\n        \"on-success\": $setup.handleSuccess,\n        \"on-error\": $setup.handleError,\n        \"on-progress\": $setup.handleProgress,\n        headers: $setup.uploadHeaders,\n        accept: \"video/*\"\n      }, {\n        tip: _withCtx(function () {\n          return _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n            \"class\": \"el-upload__tip\"\n          }, \" 支持上传MP4格式视频文件，文件大小不超过500MB \", -1 /* HOISTED */)]);\n        }),\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_icon, {\n            \"class\": \"el-icon-upload\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_upload_filled)];\n            }),\n            _: 1 /* STABLE */\n          }), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n            \"class\": \"el-upload__text\"\n          }, [_createTextVNode(\" 拖拽视频文件到此处或 \"), _createElementVNode(\"em\", null, \"点击上传\")], -1 /* HOISTED */))];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"action\", \"before-upload\", \"on-success\", \"on-error\", \"on-progress\", \"headers\"]), $setup.uploadProgress > 0 && $setup.uploadProgress < 100 ? (_openBlock(), _createBlock(_component_el_progress, {\n        key: 0,\n        percentage: $setup.uploadProgress,\n        status: $setup.uploadStatus\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])) : _createCommentVNode(\"v-if\", true), $setup.analyzing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_alert, {\n        title: \"正在分析视频\",\n        type: \"info\",\n        description: $setup.analysisStatus,\n        \"show-icon\": \"\"\n      }, null, 8 /* PROPS */, [\"description\"]), _createVNode(_component_el_progress, {\n        percentage: $setup.analysisProgress,\n        status: $setup.analysisProgress === 100 ? 'success' : ''\n      }, null, 8 /* PROPS */, [\"percentage\", \"status\"])])) : _createCommentVNode(\"v-if\", true)]))];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","$setup","isAuthenticated","_hoisted_2","_component_el_alert","title","type","description","_component_el_button","onClick","handleLogin","_createTextVNode","_","_hoisted_3","_component_el_upload","drag","action","uploadUrl","beforeUpload","handleSuccess","handleError","handleProgress","headers","uploadHeaders","accept","tip","_component_el_icon","_component_upload_filled","uploadProgress","_createBlock","_component_el_progress","percentage","status","uploadStatus","_createCommentVNode","analyzing","_hoisted_4","analysisStatus","analysisProgress"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/VideoUpload.vue"],"sourcesContent":["<template>\n  <div class=\"video-upload\">\n    <el-card class=\"upload-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>上传视频分析</h2>\n          <p>上传APP操作录屏，自动生成PRD和商业计划书</p>\n        </div>\n      </template>\n\n      <div v-if=\"!isAuthenticated\" class=\"auth-required\">\n        <el-alert\n          title=\"请先登录\"\n          type=\"warning\"\n          description=\"您需要登录后才能上传视频\"\n          show-icon\n        />\n        <el-button type=\"primary\" @click=\"handleLogin\" class=\"login-button\">\n          去登录\n        </el-button>\n      </div>\n\n      <div v-else>\n        <el-upload\n          class=\"upload-container\"\n          drag\n          :action=\"uploadUrl\"\n          :before-upload=\"beforeUpload\"\n          :on-success=\"handleSuccess\"\n          :on-error=\"handleError\"\n          :on-progress=\"handleProgress\"\n          :headers=\"uploadHeaders\"\n          accept=\"video/*\"\n        >\n          <el-icon class=\"el-icon-upload\"><upload-filled /></el-icon>\n          <div class=\"el-upload__text\">\n            拖拽视频文件到此处或 <em>点击上传</em>\n          </div>\n          <template #tip>\n            <div class=\"el-upload__tip\">\n              支持上传MP4格式视频文件，文件大小不超过500MB\n            </div>\n          </template>\n        </el-upload>\n\n        <el-progress\n          v-if=\"uploadProgress > 0 && uploadProgress < 100\"\n          :percentage=\"uploadProgress\"\n          :status=\"uploadStatus\"\n        />\n\n        <div v-if=\"analyzing\" class=\"analysis-status\">\n          <el-alert\n            title=\"正在分析视频\"\n            type=\"info\"\n            :description=\"analysisStatus\"\n            show-icon\n          />\n          <el-progress\n            :percentage=\"analysisProgress\"\n            :status=\"analysisProgress === 100 ? 'success' : ''\"\n          />\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { UploadFilled } from '@element-plus/icons-vue'\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport axios from 'axios'\n\nexport default {\n  name: 'VideoUpload',\n  components: {\n    UploadFilled\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const uploadProgress = ref(0)\n    const uploadStatus = ref('')\n    const analyzing = ref(false)\n    const analysisProgress = ref(0)\n    const analysisStatus = ref('')\n    const pollInterval = ref(null)\n\n    const isAuthenticated = computed(() => store.state.auth.isAuthenticated)\n    const uploadUrl = computed(() => {\n      const baseUrl = process.env.VUE_APP_API_URL || 'https://auth-api-nvdempim.fly.dev'\n      return `${baseUrl}/api/videos/upload`\n    })\n    const uploadHeaders = computed(() => ({\n      Authorization: `Bearer ${store.state.auth.token}`\n    }))\n\n    const beforeUpload = (file) => {\n      const isVideo = file.type.startsWith('video/')\n      const isLt500M = file.size / 1024 / 1024 < 500\n\n      if (!isVideo) {\n        ElMessage.error('只能上传视频文件!')\n        return false\n      }\n      if (!isLt500M) {\n        ElMessage.error('视频大小不能超过 500MB!')\n        return false\n      }\n      return true\n    }\n\n    const checkAnalysisStatus = async (videoId) => {\n      try {\n        const baseUrl = process.env.VUE_APP_API_URL || 'https://auth-api-nvdempim.fly.dev'\n        const response = await axios.get(`${baseUrl}/api/videos/${videoId}/status`, {\n          headers: uploadHeaders.value\n        })\n\n        const { status, progress, prd, business_plan } = response.data\n\n        analysisStatus.value = status\n        analysisProgress.value = progress\n\n        if (status === 'completed') {\n          clearInterval(pollInterval.value)\n          analyzing.value = false\n          router.push({\n            path: `/products/${videoId}`,\n            query: {\n              ...router.currentRoute.value.query,\n              prd: encodeURIComponent(prd),\n              business_plan: encodeURIComponent(business_plan)\n            }\n          })\n        } else if (status === 'failed') {\n          clearInterval(pollInterval.value)\n          analyzing.value = false\n          ElMessage.error('视频分析失败，请重试')\n        }\n      } catch (error) {\n        console.error('Analysis status check failed:', error)\n        ElMessage.error('检查分析状态失败')\n      }\n    }\n\n    const handleSuccess = (response) => {\n      uploadProgress.value = 100\n      uploadStatus.value = 'success'\n      analyzing.value = true\n      analysisStatus.value = '正在分析视频...'\n      analysisProgress.value = 0\n\n      const videoId = response.videoId\n      pollInterval.value = setInterval(() => {\n        checkAnalysisStatus(videoId)\n      }, 3000)\n\n      setTimeout(() => {\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value)\n          analyzing.value = false\n          ElMessage.warning('分析时间过长，请稍后在产品列表中查看结果')\n          router.push('/')\n        }\n      }, 600000)\n    }\n\n    const handleError = (error) => {\n      uploadStatus.value = 'exception'\n      const errorMessage = error.response?.data?.detail || '上传失败，请重试'\n      ElMessage.error(errorMessage)\n    }\n\n    const handleProgress = (event) => {\n      uploadProgress.value = Math.round(event.percent)\n    }\n\n    const handleLogin = () => {\n      router.push({\n        path: '/login',\n        query: {\n          ...router.currentRoute.value.query,\n          redirect: router.currentRoute.value.fullPath\n        }\n      })\n    }\n\n    return {\n      isAuthenticated,\n      uploadUrl,\n      uploadHeaders,\n      uploadProgress,\n      uploadStatus,\n      analyzing,\n      analysisProgress,\n      analysisStatus,\n      beforeUpload,\n      handleSuccess,\n      handleError,\n      handleProgress,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.video-upload {\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 0 1rem;\n}\n\n.upload-card {\n  border-radius: 8px;\n}\n\n.card-header {\n  text-align: center;\n}\n\n.card-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  color: #303133;\n}\n\n.card-header p {\n  margin: 0.5rem 0 0;\n  color: #909399;\n}\n\n.auth-required {\n  text-align: center;\n  padding: 2rem;\n}\n\n.login-button {\n  margin-top: 1rem;\n}\n\n.upload-container {\n  width: 100%;\n}\n\n.el-upload__tip {\n  color: #909399;\n}\n\n.analysis-status {\n  margin-top: 1rem;\n}\n\n:deep(.el-upload-dragger) {\n  width: 100%;\n  height: 200px;\n}\n\n:deep(.el-icon-upload) {\n  font-size: 48px;\n  margin-bottom: 1rem;\n  color: #409EFF;\n}\n</style>\n"],"mappings":";;EACO,SAAM;AAAc;;EAD3BA,GAAA;EAUmC,SAAM;;;EAVzCA,GAAA;AAAA;;EAAAA,GAAA;EAmD8B,SAAM;;;;;;;;;;uBAlDlCC,mBAAA,CAgEM,OAhENC,UAgEM,GA/DJC,YAAA,CA8DUC,kBAAA;IA9DD,SAAM;EAAa;IACfC,MAAM,EAAAC,QAAA,CACf;MAAA,OAGMC,MAAA,QAAAA,MAAA,OAHNC,mBAAA,CAGM;QAHD,SAAM;MAAa,IACtBA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAA8B,WAA3B,yBAAuB,E;;IANpC,WAAAF,QAAA,CAUM;MAAA,OAOE,C,CAPUG,MAAA,CAAAC,eAAe,I,cAA3BT,mBAAA,CAUM,OAVNU,UAUM,GATJR,YAAA,CAKES,mBAAA;QAJAC,KAAK,EAAC,MAAM;QACZC,IAAI,EAAC,SAAS;QACdC,WAAW,EAAC,cAAc;QAC1B,WAAS,EAAT;UAEFZ,YAAA,CAEYa,oBAAA;QAFDF,IAAI,EAAC,SAAS;QAAEG,OAAK,EAAER,MAAA,CAAAS,WAAW;QAAE,SAAM;;QAjB7D,WAAAZ,QAAA,CAiB4E;UAAA,OAEpEC,MAAA,QAAAA,MAAA,OAnBRY,gBAAA,CAiB4E,OAEpE,E;;QAnBRC,CAAA;yDAsBMnB,mBAAA,CAyCM,OA/DZoB,UAAA,GAuBQlB,YAAA,CAoBYmB,oBAAA;QAnBV,SAAM,kBAAkB;QACxBC,IAAI,EAAJ,EAAI;QACHC,MAAM,EAAEf,MAAA,CAAAgB,SAAS;QACjB,eAAa,EAAEhB,MAAA,CAAAiB,YAAY;QAC3B,YAAU,EAAEjB,MAAA,CAAAkB,aAAa;QACzB,UAAQ,EAAElB,MAAA,CAAAmB,WAAW;QACrB,aAAW,EAAEnB,MAAA,CAAAoB,cAAc;QAC3BC,OAAO,EAAErB,MAAA,CAAAsB,aAAa;QACvBC,MAAM,EAAC;;QAMIC,GAAG,EAAA3B,QAAA,CACZ;UAAA,OAEMC,MAAA,QAAAA,MAAA,OAFNC,mBAAA,CAEM;YAFD,SAAM;UAAgB,GAAC,8BAE5B,oB;;QAzCZ,WAAAF,QAAA,CAkCU;UAAA,OAA2D,CAA3DH,YAAA,CAA2D+B,kBAAA;YAAlD,SAAM;UAAgB;YAlCzC,WAAA5B,QAAA,CAkC0C;cAAA,OAAiB,CAAjBH,YAAA,CAAiBgC,wBAAA,E;;YAlC3Df,CAAA;wCAmCUZ,mBAAA,CAEM;YAFD,SAAM;UAAiB,IAnCtCW,gBAAA,CAmCuC,cAChB,GAAAX,mBAAA,CAAa,YAAT,MAAI,E;;QApC/BY,CAAA;0GA8CgBX,MAAA,CAAA2B,cAAc,QAAQ3B,MAAA,CAAA2B,cAAc,U,cAD5CC,YAAA,CAIEC,sBAAA;QAjDVtC,GAAA;QA+CWuC,UAAU,EAAE9B,MAAA,CAAA2B,cAAc;QAC1BI,MAAM,EAAE/B,MAAA,CAAAgC;2DAhDnBC,mBAAA,gBAmDmBjC,MAAA,CAAAkC,SAAS,I,cAApB1C,mBAAA,CAWM,OAXN2C,UAWM,GAVJzC,YAAA,CAKES,mBAAA;QAJAC,KAAK,EAAC,QAAQ;QACdC,IAAI,EAAC,MAAM;QACVC,WAAW,EAAEN,MAAA,CAAAoC,cAAc;QAC5B,WAAS,EAAT;gDAEF1C,YAAA,CAGEmC,sBAAA;QAFCC,UAAU,EAAE9B,MAAA,CAAAqC,gBAAgB;QAC5BN,MAAM,EAAE/B,MAAA,CAAAqC,gBAAgB;6DA5DrCJ,mBAAA,e;;IAAAtB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}