{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"verify-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"verify-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"verifyForm\",\n      model: $data.form,\n      rules: $data.rules,\n      \"label-width\": \"120px\",\n      class: \"verify-form\"\n    }, {\n      default: _withCtx(() => [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"邮箱验证\", -1 /* HOISTED */)), _createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.email = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"验证码\",\n        prop: \"code\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.code,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.code = $event),\n          placeholder: \"请输入验证码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.submitForm\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"验证\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: $options.resendCode\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"重新发送验证码\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","default","_withCtx","_component_el_form","ref","model","$data","form","rules","_createElementVNode","_component_el_form_item","label","prop","_component_el_input","modelValue","email","_cache","$event","disabled","_","code","placeholder","_component_el_button","type","onClick","$options","submitForm","_createTextVNode","resendCode"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/VerifyEmail.vue"],"sourcesContent":["<template>\n  <div class=\"verify-container\">\n    <el-card class=\"verify-card\">\n      <el-form\n        ref=\"verifyForm\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"120px\"\n        class=\"verify-form\"\n      >\n        <h2>邮箱验证</h2>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"form.email\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"code\">\n          <el-input v-model=\"form.code\" placeholder=\"请输入验证码\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\">验证</el-button>\n          <el-button @click=\"resendCode\">重新发送验证码</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus'\nimport { api } from '@/utils/api'\n\nexport default {\n  name: 'VerifyEmail',\n  data() {\n    return {\n      form: {\n        email: '',\n        code: ''\n      },\n      rules: {\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ],\n        code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          { min: 6, max: 6, message: '验证码长度为6位', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    // Get email from route query\n    this.form.email = this.$route.query.email || ''\n  },\n  methods: {\n    async submitForm() {\n      try {\n        await this.$refs.verifyForm.validate()\n        const response = await api.post('/api/auth/verify-email', this.form)\n\n        if (response.status === 200) {\n          ElMessage.success('邮箱验证成功')\n          this.$router.push('/login')\n        }\n      } catch (error) {\n        if (error.response?.status === 422) {\n          ElMessage.error('验证失败：验证码无效')\n        } else {\n          ElMessage.error('验证失败，请重试')\n        }\n      }\n    },\n    async resendCode() {\n      try {\n        const response = await api.post('/api/auth/resend-verification', {\n          email: this.form.email\n        })\n\n        if (response.status === 200) {\n          ElMessage.success('验证码已重新发送')\n        }\n      } catch (error) {\n        ElMessage.error('发送失败，请重试')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.verify-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.verify-card {\n  width: 480px;\n}\n\n.verify-form {\n  padding: 20px;\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 30px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;;;;;;uBAA7BC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,YAAA,CAoBUC,kBAAA;IApBDJ,KAAK,EAAC;EAAa;IAFhCK,OAAA,EAAAC,QAAA,CAGM,MAkBU,CAlBVH,YAAA,CAkBUI,kBAAA;MAjBRC,GAAG,EAAC,YAAY;MACfC,KAAK,EAAEC,KAAA,CAAAC,IAAI;MACXC,KAAK,EAAEF,KAAA,CAAAE,KAAK;MACb,aAAW,EAAC,OAAO;MACnBZ,KAAK,EAAC;;MARdK,OAAA,EAAAC,QAAA,CAUQ,MAAa,C,0BAAbO,mBAAA,CAAa,YAAT,MAAI,sBACRV,YAAA,CAEeW,uBAAA;QAFDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;QAXtCX,OAAA,EAAAC,QAAA,CAYU,MAAmD,CAAnDH,YAAA,CAAmDc,mBAAA;UAZ7DC,UAAA,EAY6BR,KAAA,CAAAC,IAAI,CAACQ,KAAK;UAZvC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY6BX,KAAA,CAAAC,IAAI,CAACQ,KAAK,GAAAE,MAAA;UAAEC,QAAQ,EAAR;;QAZzCC,CAAA;UAcQpB,YAAA,CAEeW,uBAAA;QAFDC,KAAK,EAAC,KAAK;QAACC,IAAI,EAAC;;QAdvCX,OAAA,EAAAC,QAAA,CAeU,MAA8D,CAA9DH,YAAA,CAA8Dc,mBAAA;UAfxEC,UAAA,EAe6BR,KAAA,CAAAC,IAAI,CAACa,IAAI;UAftC,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe6BX,KAAA,CAAAC,IAAI,CAACa,IAAI,GAAAH,MAAA;UAAEI,WAAW,EAAC;;QAfpDF,CAAA;UAiBQpB,YAAA,CAGeW,uBAAA;QApBvBT,OAAA,EAAAC,QAAA,CAkBU,MAA4D,CAA5DH,YAAA,CAA4DuB,oBAAA;UAAjDC,IAAI,EAAC,SAAS;UAAEC,OAAK,EAAEC,QAAA,CAAAC;;UAlB5CzB,OAAA,EAAAC,QAAA,CAkBwD,MAAEc,MAAA,QAAAA,MAAA,OAlB1DW,gBAAA,CAkBwD,IAAE,E;UAlB1DR,CAAA;wCAmBUpB,YAAA,CAAkDuB,oBAAA;UAAtCE,OAAK,EAAEC,QAAA,CAAAG;QAAU;UAnBvC3B,OAAA,EAAAC,QAAA,CAmByC,MAAOc,MAAA,QAAAA,MAAA,OAnBhDW,gBAAA,CAmByC,SAAO,E;UAnBhDR,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}