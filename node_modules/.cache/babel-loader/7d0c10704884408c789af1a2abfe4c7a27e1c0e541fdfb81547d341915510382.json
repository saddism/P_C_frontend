{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nvar API_BASE_URL = 'https://auth-api-nvdempim.fly.dev';\nexport var api = {\n  getProducts: function getProducts() {\n    var _arguments = arguments;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var useMock;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            useMock = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : false;\n            if (!useMock) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", {\n              data: {\n                products: [{\n                  id: 1,\n                  name: 'Jetson Orin Nano Super Developer Kit',\n                  description: 'Most affordable generative AI supercomputer',\n                  tags: ['Robots', 'Hardware'],\n                  icon: 'ü§ñ',\n                  bp: '1234',\n                  prd: '4565'\n                }, {\n                  id: 2,\n                  name: 'PontaHR',\n                  description: 'Ditch the chaos, discover a better way to hire',\n                  tags: ['Hiring', 'SaaS', 'Human Resources'],\n                  icon: 'üòä',\n                  bp: '1234',\n                  prd: '4565'\n                }, {\n                  id: 3,\n                  name: 'Hercaress',\n                  description: 'Clover',\n                  tags: ['Couples', 'Inclusivity', 'Intimacy'],\n                  icon: 'H',\n                  bp: '1234',\n                  prd: '4565'\n                }, {\n                  id: 4,\n                  name: 'Amazon Project Amelia',\n                  description: 'A powerful new generative AI-based selling assistant',\n                  tags: ['Artificial Intelligence', 'E-Commerce'],\n                  icon: 'üì¶',\n                  bp: '1234',\n                  prd: '4565'\n                }, {\n                  id: 5,\n                  name: 'Soothe',\n                  description: 'Anonymous app for kindness',\n                  tags: ['Anonymous', 'Health', 'Community'],\n                  icon: 'üòå',\n                  bp: '1234',\n                  prd: '4565'\n                }]\n              }\n            });\n          case 3:\n            return _context.abrupt(\"return\", axios.get(\"\".concat(API_BASE_URL, \"/api/videos\")));\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  getTestimonials: function getTestimonials() {\n    var _arguments2 = arguments;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var useMock;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            useMock = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : false;\n            if (!useMock) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\", {\n              data: {\n                testimonials: [{\n                  id: 1,\n                  text: 'ËøôÈáåÊòØ‰∏ÄÊÆµËØÅË®Ä',\n                  name: 'Barry McCardel',\n                  title: 'CEO and co-founder at Hex'\n                }, {\n                  id: 2,\n                  text: 'ËøôÈáåÊòØ‰∏ÄÊÆµËØÅË®Ä',\n                  name: 'Barry McCardel',\n                  title: 'CEO and co-founder at Hex'\n                }, {\n                  id: 3,\n                  text: 'ËøôÈáåÊòØ‰∏ÄÊÆµËØÅË®Ä',\n                  name: 'Barry McCardel',\n                  title: 'CEO and co-founder at Hex'\n                }]\n              }\n            });\n          case 3:\n            return _context2.abrupt(\"return\", axios.get(\"\".concat(API_BASE_URL, \"/api/testimonials\")));\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","getProducts","_arguments","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useMock","wrap","_callee$","_context","prev","next","length","undefined","abrupt","data","products","id","name","description","tags","icon","bp","prd","get","concat","stop","getTestimonials","_arguments2","_callee2","_callee2$","_context2","testimonials","text","title"],"sources":["/home/ubuntu/repos/P_C_frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://auth-api-nvdempim.fly.dev';\n\nexport const api = {\n  async getProducts(useMock = false) {\n    if (useMock) {\n      return {\n        data: {\n          products: [\n            {\n              id: 1,\n              name: 'Jetson Orin Nano Super Developer Kit',\n              description: 'Most affordable generative AI supercomputer',\n              tags: ['Robots', 'Hardware'],\n              icon: 'ü§ñ',\n              bp: '1234',\n              prd: '4565'\n            },\n            {\n              id: 2,\n              name: 'PontaHR',\n              description: 'Ditch the chaos, discover a better way to hire',\n              tags: ['Hiring', 'SaaS', 'Human Resources'],\n              icon: 'üòä',\n              bp: '1234',\n              prd: '4565'\n            },\n            {\n              id: 3,\n              name: 'Hercaress',\n              description: 'Clover',\n              tags: ['Couples', 'Inclusivity', 'Intimacy'],\n              icon: 'H',\n              bp: '1234',\n              prd: '4565'\n            },\n            {\n              id: 4,\n              name: 'Amazon Project Amelia',\n              description: 'A powerful new generative AI-based selling assistant',\n              tags: ['Artificial Intelligence', 'E-Commerce'],\n              icon: 'üì¶',\n              bp: '1234',\n              prd: '4565'\n            },\n            {\n              id: 5,\n              name: 'Soothe',\n              description: 'Anonymous app for kindness',\n              tags: ['Anonymous', 'Health', 'Community'],\n              icon: 'üòå',\n              bp: '1234',\n              prd: '4565'\n            }\n          ]\n        }\n      };\n    }\n    return axios.get(`${API_BASE_URL}/api/videos`);\n  },\n\n  async getTestimonials(useMock = false) {\n    if (useMock) {\n      return {\n        data: {\n          testimonials: [\n            {\n              id: 1,\n              text: 'ËøôÈáåÊòØ‰∏ÄÊÆµËØÅË®Ä',\n              name: 'Barry McCardel',\n              title: 'CEO and co-founder at Hex'\n            },\n            {\n              id: 2,\n              text: 'ËøôÈáåÊòØ‰∏ÄÊÆµËØÅË®Ä',\n              name: 'Barry McCardel',\n              title: 'CEO and co-founder at Hex'\n            },\n            {\n              id: 3,\n              text: 'ËøôÈáåÊòØ‰∏ÄÊÆµËØÅË®Ä',\n              name: 'Barry McCardel',\n              title: 'CEO and co-founder at Hex'\n            }\n          ]\n        }\n      };\n    }\n    return axios.get(`${API_BASE_URL}/api/testimonials`);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}