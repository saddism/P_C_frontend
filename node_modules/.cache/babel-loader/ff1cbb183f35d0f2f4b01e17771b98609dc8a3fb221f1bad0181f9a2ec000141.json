{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"register-card\"\n  }, {\n    default: _withCtx(() => [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"用户注册\", -1)), _createVNode(_component_el_form, {\n      ref: \"registerForm\",\n      model: $setup.form,\n      rules: $setup.rules,\n      \"label-width\": \"80px\",\n      class: \"register-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.email = $event),\n          type: \"email\",\n          placeholder: \"请输入邮箱\",\n          \"data-test\": \"email-input\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.username,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.username = $event),\n          placeholder: \"请输入用户名\",\n          \"data-test\": \"username-input\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event),\n          type: \"password\",\n          placeholder: \"请输入密码\",\n          \"data-test\": \"password-input\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), $setup.showVerificationCode ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"验证码\",\n        prop: \"code\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.code,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.code = $event),\n          placeholder: \"请输入验证码\",\n          \"data-test\": \"code-input\"\n        }, {\n          append: _withCtx(() => [_createVNode(_component_el_button, {\n            disabled: $setup.countdown > 0,\n            onClick: $setup.handleSendCode,\n            \"data-test\": \"send-code-button\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.countdown > 0 ? `${$setup.countdown}秒后重试` : \"获取验证码\"), 1)]),\n            _: 1\n          }, 8, [\"disabled\", \"onClick\"])]),\n          _: 1\n        }, 8, [\"modelValue\"])]),\n        _: 1\n      })) : _createCommentVNode(\"\", true), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleRegister,\n          loading: $setup.loading,\n          \"data-test\": \"register-button\"\n        }, {\n          default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" 注册 \")])),\n          _: 1\n        }, 8, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n          onClick: _cache[4] || (_cache[4] = $event => _ctx.$router.push({\n            path: '/login',\n            query: _ctx.$route.query\n          }))\n        }, {\n          default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"返回登录\")])),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"model\", \"rules\"])]),\n    _: 1\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","default","_withCtx","_createElementVNode","_component_el_form","ref","model","$setup","form","rules","_component_el_form_item","label","prop","_component_el_input","modelValue","email","_cache","$event","type","placeholder","_","username","password","showVerificationCode","_createBlock","key","code","append","_component_el_button","disabled","countdown","onClick","handleSendCode","_createTextVNode","_toDisplayString","_createCommentVNode","handleRegister","loading","_ctx","$router","push","path","query","$route"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <el-card class=\"register-card\">\n      <h2>用户注册</h2>\n      <el-form\n        ref=\"registerForm\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n        class=\"register-form\"\n      >\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input\n            v-model=\"form.email\"\n            type=\"email\"\n            placeholder=\"请输入邮箱\"\n            data-test=\"email-input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            v-model=\"form.username\"\n            placeholder=\"请输入用户名\"\n            data-test=\"username-input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            data-test=\"password-input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"验证码\" prop=\"code\" v-if=\"showVerificationCode\">\n          <el-input v-model=\"form.code\" placeholder=\"请输入验证码\" data-test=\"code-input\">\n            <template #append>\n              <el-button :disabled=\"countdown > 0\" @click=\"handleSendCode\" data-test=\"send-code-button\">\n                {{ countdown > 0 ? `${countdown}秒后重试` : \"获取验证码\" }}\n              </el-button>\n            </template>\n          </el-input>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleRegister\" :loading=\"loading\" data-test=\"register-button\">\n            注册\n          </el-button>\n          <el-button @click=\"$router.push({ path: '/login', query: $route.query })\">返回登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { ElMessage } from \"element-plus\";\nimport { api } from \"../utils/api\";\n\nexport default {\n  name: \"UserRegister\",\n  setup() {\n    const router = useRouter();\n    const registerForm = ref(null);\n    const loading = ref(false);\n    const showVerificationCode = ref(false);\n    const countdown = ref(0);\n\n    const form = reactive({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      code: \"\",\n    });\n\n    const rules = {\n      email: [\n        { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n        { type: \"email\", message: \"请输入正确的邮箱格式\", trigger: \"blur\" },\n      ],\n      username: [\n        { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n        {\n          min: 3,\n          max: 20,\n          message: \"用户名长度在3到20个字符之间\",\n          trigger: \"blur\",\n        },\n      ],\n      password: [\n        { required: true, message: \"请输入密码\", trigger: \"blur\" },\n        { min: 8, message: \"密码长度至少为8个字符\", trigger: \"blur\" },\n      ],\n      code: [\n        { required: true, message: \"请输入验证码\", trigger: \"blur\" },\n        { len: 6, message: \"验证码长度为6位\", trigger: \"blur\" },\n      ],\n    };\n\n    const startCountdown = () => {\n      countdown.value = 60;\n      const timer = setInterval(() => {\n        countdown.value--;\n        if (countdown.value <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    };\n\n    const handleSendCode = async () => {\n      try {\n        const response = await api.post(\"https://auth-api-nvdempim.fly.dev/api/auth/resend-verification\", {\n          email: form.email,\n        });\n        if (response.data.status === 200) {\n          startCountdown();\n          showVerificationCode.value = true;\n          ElMessage.success(\"验证码已发送，请查收邮件\");\n        }\n      } catch (error) {\n        ElMessage.error(\"发送验证码失败，请重试\");\n      }\n    };\n\n    const handleRegister = async () => {\n      if (!registerForm.value) return;\n\n      await registerForm.value.validate(async (valid) => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const response = await api.post(\"https://auth-api-nvdempim.fly.dev/api/auth/register\", form);\n            if (response.data.status === 201) {\n              ElMessage.success('注册成功');\n              await router.push({ path: \"/register-success\", query: { email: form.email } });\n            }\n          } catch (error) {\n            const message = error.response?.data?.message || \"注册失败，请重试\";\n            ElMessage.error(message);\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n\n    return {\n      registerForm,\n      form,\n      rules,\n      loading,\n      showVerificationCode,\n      countdown,\n      handleSendCode,\n      handleRegister,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.register-card {\n  width: 480px;\n}\n\n.register-form {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}