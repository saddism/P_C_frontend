{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"success-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_result = _resolveComponent(\"el-result\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"success-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_result, {\n      icon: \"success\",\n      title: \"注册成功\",\n      \"sub-title\": \"请前往邮箱完成验证\"\n    }, {\n      extra: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.resendVerification\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 重新发送验证邮件 \")])),\n        _: 1\n      }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/login'))\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 返回登录 \")])),\n        _: 1\n      })]),\n      _: 1\n    })]),\n    _: 1\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","default","_withCtx","_component_el_result","icon","title","extra","_component_el_button","type","onClick","$options","resendVerification","_cache","_createTextVNode","_","$event","_ctx","$router","push"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/RegisterSuccess.vue"],"sourcesContent":["<template>\n  <div class=\"success-container\">\n    <el-card class=\"success-card\">\n      <el-result icon=\"success\" title=\"注册成功\" sub-title=\"请前往邮箱完成验证\">\n        <template #extra>\n          <el-button type=\"primary\" @click=\"resendVerification\">\n            重新发送验证邮件\n          </el-button>\n          <el-button @click=\"$router.push('/login')\">\n            返回登录\n          </el-button>\n        </template>\n      </el-result>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus'\nimport { api } from '@/utils/api'\n\nexport default {\n  name: 'RegisterSuccess',\n  methods: {\n    async resendVerification() {\n      try {\n        const email = this.$route.query.email\n        if (!email) {\n          ElMessage.error('邮箱地址缺失')\n          return\n        }\n\n        const response = await api.post('/api/auth/resend-verification', { email })\n        if (response.status === 200) {\n          ElMessage.success('验证邮件已重新发送')\n        }\n      } catch (error) {\n        ElMessage.error('发送失败，请重试')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.success-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.success-card {\n  width: 480px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAmB;;;;;uBAA9BC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,YAAA,CAWUC,kBAAA;IAXDJ,KAAK,EAAC;EAAc;IAFjCK,OAAA,EAAAC,QAAA,CAGM,MASY,CATZH,YAAA,CASYI,oBAAA;MATDC,IAAI,EAAC,SAAS;MAACC,KAAK,EAAC,MAAM;MAAC,WAAS,EAAC;;MACpCC,KAAK,EAAAJ,QAAA,CACd,MAEY,CAFZH,YAAA,CAEYQ,oBAAA;QAFDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAC;;QAL5CV,OAAA,EAAAC,QAAA,CAKgE,MAEtDU,MAAA,QAAAA,MAAA,OAPVC,gBAAA,CAKgE,YAEtD,E;QAPVC,CAAA;0BAQUf,YAAA,CAEYQ,oBAAA;QAFAE,OAAK,EAAAG,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;;QARzCjB,OAAA,EAAAC,QAAA,CAQqD,MAE3CU,MAAA,QAAAA,MAAA,OAVVC,gBAAA,CAQqD,QAE3C,E;QAVVC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}