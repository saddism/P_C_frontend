{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Register from '../views/Register.vue';\nimport Login from '../views/Login.vue';\nimport RegisterSuccess from '../views/RegisterSuccess.vue';\nimport Home from '../views/Home.vue';\nimport VideoUpload from '../views/VideoUpload.vue';\nimport store from '../store';\nvar routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/register-success',\n  name: 'RegisterSuccess',\n  component: RegisterSuccess,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/upload',\n  name: 'VideoUpload',\n  component: VideoUpload,\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  // Preserve mock parameter during navigation\n  var mockEnabled = from.query.mock === '1';\n  var toQuery = _objectSpread({}, to.query);\n  if (mockEnabled && !toQuery.mock) {\n    toQuery.mock = '1';\n  }\n\n  // Check authentication for protected routes\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    var token = localStorage.getItem('token');\n    if (!token) {\n      next({\n        path: '/login',\n        query: _objectSpread({\n          redirect: to.fullPath\n        }, toQuery)\n      });\n      return;\n    }\n  }\n\n  // Always pass through the query parameters\n  next(_objectSpread(_objectSpread({}, to), {}, {\n    query: toQuery\n  }));\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Register","Login","RegisterSuccess","Home","VideoUpload","store","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","mockEnabled","query","mock","toQuery","_objectSpread","matched","some","record","token","localStorage","getItem","redirect","fullPath"],"sources":["/home/ubuntu/repos/P_C_frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Register from '../views/Register.vue'\nimport Login from '../views/Login.vue'\nimport RegisterSuccess from '../views/RegisterSuccess.vue'\nimport Home from '../views/Home.vue'\nimport VideoUpload from '../views/VideoUpload.vue'\nimport store from '../store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register,\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login,\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/register-success',\n    name: 'RegisterSuccess',\n    component: RegisterSuccess,\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/upload',\n    name: 'VideoUpload',\n    component: VideoUpload,\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  // Preserve mock parameter during navigation\n  const mockEnabled = from.query.mock === '1'\n  const toQuery = { ...to.query }\n\n  if (mockEnabled && !toQuery.mock) {\n    toQuery.mock = '1'\n  }\n\n  // Check authentication for protected routes\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const token = localStorage.getItem('token')\n    if (!token) {\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath, ...toQuery }\n      })\n      return\n    }\n  }\n\n  // Always pass through the query parameters\n  next({ ...to, query: toQuery })\n})\n\nexport default router\n"],"mappings":";;;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,UAAU;AAE5B,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEN,IAAI;EACfO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAET,QAAQ;EACnBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER,KAAK;EAChBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEP,eAAe;EAC1BQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEL,WAAW;EACtBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,IAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAAC,CAAC;EAC3BO,MAAM,EAANA;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC;EACA,IAAMC,WAAW,GAAGF,IAAI,CAACG,KAAK,CAACC,IAAI,KAAK,GAAG;EAC3C,IAAMC,OAAO,GAAAC,aAAA,KAAQP,EAAE,CAACI,KAAK,CAAE;EAE/B,IAAID,WAAW,IAAI,CAACG,OAAO,CAACD,IAAI,EAAE;IAChCC,OAAO,CAACD,IAAI,GAAG,GAAG;EACpB;;EAEA;EACA,IAAIL,EAAE,CAACQ,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACf,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvD,IAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVT,IAAI,CAAC;QACHV,IAAI,EAAE,QAAQ;QACdY,KAAK,EAAAG,aAAA;UAAIO,QAAQ,EAAEd,EAAE,CAACe;QAAQ,GAAKT,OAAO;MAC5C,CAAC,CAAC;MACF;IACF;EACF;;EAEA;EACAJ,IAAI,CAAAK,aAAA,CAAAA,aAAA,KAAMP,EAAE;IAAEI,KAAK,EAAEE;EAAO,EAAE,CAAC;AACjC,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}