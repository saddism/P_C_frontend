{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ubuntu/repos/P_C_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  name: 'Login',\n  setup: function setup() {\n    var router = useRouter();\n    var loginForm = ref(null);\n    var loading = ref(false);\n    var form = reactive({\n      email: '',\n      password: ''\n    });\n    var rules = {\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱格式',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (loginForm.value) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return loginForm.value.validate(/*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(valid) {\n                  var response, token, _error$response, message;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!valid) {\n                          _context.next = 16;\n                          break;\n                        }\n                        loading.value = true;\n                        _context.prev = 2;\n                        _context.next = 5;\n                        return axios.post('/api/auth/login', form);\n                      case 5:\n                        response = _context.sent;\n                        if (response.data.status === 200) {\n                          token = response.data.data.token;\n                          localStorage.setItem('token', token);\n                          ElMessage.success('登录成功');\n                          router.push('/');\n                        }\n                        _context.next = 13;\n                        break;\n                      case 9:\n                        _context.prev = 9;\n                        _context.t0 = _context[\"catch\"](2);\n                        message = ((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.message) || '登录失败，请重试';\n                        ElMessage.error(message);\n                      case 13:\n                        _context.prev = 13;\n                        loading.value = false;\n                        return _context.finish(13);\n                      case 16:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee, null, [[2, 9, 13, 16]]);\n                }));\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function handleLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      loginForm: loginForm,\n      form: form,\n      rules: rules,\n      loading: loading,\n      handleLogin: handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","axios","name","setup","router","loginForm","loading","form","email","password","rules","required","message","trigger","type","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_callee2$","_context2","prev","next","value","abrupt","validate","_ref2","_callee","valid","response","token","_error$response","_callee$","_context","post","sent","data","status","localStorage","setItem","success","push","t0","error","finish","stop","_x","apply","arguments"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <h2>用户登录</h2>\n      <el-form\n        ref=\"loginForm\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n        class=\"login-form\"\n      >\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"form.email\" type=\"email\" placeholder=\"请输入邮箱\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" type=\"password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\">\n            登录\n          </el-button>\n          <el-button @click=\"$router.push('/register')\">注册账号</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport axios from 'axios'\n\nexport default {\n  name: 'Login',\n  setup() {\n    const router = useRouter()\n    const loginForm = ref(null)\n    const loading = ref(false)\n\n    const form = reactive({\n      email: '',\n      password: ''\n    })\n\n    const rules = {\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' }\n      ]\n    }\n\n    const handleLogin = async () => {\n      if (!loginForm.value) return\n\n      await loginForm.value.validate(async (valid) => {\n        if (valid) {\n          loading.value = true\n          try {\n            const response = await axios.post('/api/auth/login', form)\n            if (response.data.status === 200) {\n              const { token } = response.data.data\n              localStorage.setItem('token', token)\n              ElMessage.success('登录成功')\n              router.push('/')\n            }\n          } catch (error) {\n            const message = error.response?.data?.message || '登录失败，请重试'\n            ElMessage.error(message)\n          } finally {\n            loading.value = false\n          }\n        }\n      })\n    }\n\n    return {\n      loginForm,\n      form,\n      rules,\n      loading,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 480px;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}