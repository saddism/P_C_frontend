{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { ElMessage } from \"element-plus\";\nimport { api } from \"../utils/api\";\nexport default {\n  name: \"UserRegister\",\n  setup() {\n    const router = useRouter();\n    const registerForm = ref(null);\n    const loading = ref(false);\n    const showVerificationCode = ref(false);\n    const countdown = ref(0);\n    const form = reactive({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      code: \"\"\n    });\n    const rules = {\n      email: [{\n        required: true,\n        message: \"请输入邮箱\",\n        trigger: \"blur\"\n      }, {\n        type: \"email\",\n        message: \"请输入正确的邮箱格式\",\n        trigger: \"blur\"\n      }],\n      username: [{\n        required: true,\n        message: \"请输入用户名\",\n        trigger: \"blur\"\n      }, {\n        min: 3,\n        max: 20,\n        message: \"用户名长度在3到20个字符之间\",\n        trigger: \"blur\"\n      }],\n      password: [{\n        required: true,\n        message: \"请输入密码\",\n        trigger: \"blur\"\n      }, {\n        min: 8,\n        message: \"密码长度至少为8个字符\",\n        trigger: \"blur\"\n      }],\n      code: [{\n        required: true,\n        message: \"请输入验证码\",\n        trigger: \"blur\"\n      }, {\n        len: 6,\n        message: \"验证码长度为6位\",\n        trigger: \"blur\"\n      }]\n    };\n    const startCountdown = () => {\n      countdown.value = 60;\n      const timer = setInterval(() => {\n        countdown.value--;\n        if (countdown.value <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    };\n    const handleSendCode = async () => {\n      try {\n        const response = await api.post(\"https://auth-api-nvdempim.fly.dev/api/auth/resend-verification\", {\n          email: form.email\n        });\n        if (response.data.status === 200) {\n          startCountdown();\n          showVerificationCode.value = true;\n          ElMessage.success(\"验证码已发送，请查收邮件\");\n        }\n      } catch (error) {\n        ElMessage.error(\"发送验证码失败，请重试\");\n      }\n    };\n    const handleRegister = async () => {\n      if (!registerForm.value) return;\n      await registerForm.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const response = await api.post(\"https://auth-api-nvdempim.fly.dev/api/auth/register\", form);\n            if (response.data.status === 201) {\n              ElMessage.success('注册成功');\n              await router.push({\n                path: \"/register-success\",\n                query: {\n                  email: form.email\n                }\n              });\n            }\n          } catch (error) {\n            const message = error.response?.data?.message || \"注册失败，请重试\";\n            ElMessage.error(message);\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n    return {\n      registerForm,\n      form,\n      rules,\n      loading,\n      showVerificationCode,\n      countdown,\n      handleSendCode,\n      handleRegister\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","api","name","setup","router","registerForm","loading","showVerificationCode","countdown","form","email","username","password","code","rules","required","message","trigger","type","min","max","len","startCountdown","value","timer","setInterval","clearInterval","handleSendCode","response","post","data","status","success","error","handleRegister","validate","valid","push","path","query"],"sources":["/home/ubuntu/repos/P_C_frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <el-card class=\"register-card\">\n      <h2>用户注册</h2>\n      <el-form\n        ref=\"registerForm\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n        class=\"register-form\"\n      >\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input\n            v-model=\"form.email\"\n            type=\"email\"\n            placeholder=\"请输入邮箱\"\n            data-test=\"email-input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            v-model=\"form.username\"\n            placeholder=\"请输入用户名\"\n            data-test=\"username-input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            data-test=\"password-input\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"验证码\" prop=\"code\" v-if=\"showVerificationCode\">\n          <el-input v-model=\"form.code\" placeholder=\"请输入验证码\" data-test=\"code-input\">\n            <template #append>\n              <el-button :disabled=\"countdown > 0\" @click=\"handleSendCode\" data-test=\"send-code-button\">\n                {{ countdown > 0 ? `${countdown}秒后重试` : \"获取验证码\" }}\n              </el-button>\n            </template>\n          </el-input>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleRegister\" :loading=\"loading\" data-test=\"register-button\">\n            注册\n          </el-button>\n          <el-button @click=\"$router.push({ path: '/login', query: $route.query })\">返回登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { ElMessage } from \"element-plus\";\nimport { api } from \"../utils/api\";\n\nexport default {\n  name: \"UserRegister\",\n  setup() {\n    const router = useRouter();\n    const registerForm = ref(null);\n    const loading = ref(false);\n    const showVerificationCode = ref(false);\n    const countdown = ref(0);\n\n    const form = reactive({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      code: \"\",\n    });\n\n    const rules = {\n      email: [\n        { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n        { type: \"email\", message: \"请输入正确的邮箱格式\", trigger: \"blur\" },\n      ],\n      username: [\n        { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n        {\n          min: 3,\n          max: 20,\n          message: \"用户名长度在3到20个字符之间\",\n          trigger: \"blur\",\n        },\n      ],\n      password: [\n        { required: true, message: \"请输入密码\", trigger: \"blur\" },\n        { min: 8, message: \"密码长度至少为8个字符\", trigger: \"blur\" },\n      ],\n      code: [\n        { required: true, message: \"请输入验证码\", trigger: \"blur\" },\n        { len: 6, message: \"验证码长度为6位\", trigger: \"blur\" },\n      ],\n    };\n\n    const startCountdown = () => {\n      countdown.value = 60;\n      const timer = setInterval(() => {\n        countdown.value--;\n        if (countdown.value <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    };\n\n    const handleSendCode = async () => {\n      try {\n        const response = await api.post(\"https://auth-api-nvdempim.fly.dev/api/auth/resend-verification\", {\n          email: form.email,\n        });\n        if (response.data.status === 200) {\n          startCountdown();\n          showVerificationCode.value = true;\n          ElMessage.success(\"验证码已发送，请查收邮件\");\n        }\n      } catch (error) {\n        ElMessage.error(\"发送验证码失败，请重试\");\n      }\n    };\n\n    const handleRegister = async () => {\n      if (!registerForm.value) return;\n\n      await registerForm.value.validate(async (valid) => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const response = await api.post(\"https://auth-api-nvdempim.fly.dev/api/auth/register\", form);\n            if (response.data.status === 201) {\n              ElMessage.success('注册成功');\n              await router.push({ path: \"/register-success\", query: { email: form.email } });\n            }\n          } catch (error) {\n            const message = error.response?.data?.message || \"注册失败，请重试\";\n            ElMessage.error(message);\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n\n    return {\n      registerForm,\n      form,\n      rules,\n      loading,\n      showVerificationCode,\n      countdown,\n      handleSendCode,\n      handleRegister,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.register-card {\n  width: 480px;\n}\n\n.register-form {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}